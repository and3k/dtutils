% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_tsv.R
\name{write_tsv}
\alias{write_tsv}
\alias{write_tsv.data.table}
\alias{fwrite_tsv}
\alias{write_tsv.data.frame}
\alias{write_tsv.matrix}
\title{TSV writer}
\usage{
write_tsv(object, file, ...)

\method{write_tsv}{data.table}(object, file, ...)

\method{write_tsv}{data.frame}(object, file, row_names, ...)

\method{write_tsv}{matrix}(object, file, row_names, col_names, ...)
}
\arguments{
\item{object}{An \R object to save as TSV.}

\item{file}{Output file name.
File extensions other than \code{.tsv}, \code{.tab}, and \code{.txt} result in a warning.}

\item{...}{Additional arguments to be passed to methods (see below).
All additional arguments in methods are ignored.}

\item{row_names}{For \R objects with row names.
\code{FALSE} omits writing row names. \code{TRUE} writes row names.
A single string can be given instead of \code{TRUE}
to set the column name for the row names.
Per default, row names are written, expect if
they are automatic row names (i.e., numbered).}

\item{col_names}{Analogous to \code{row_names}.}
}
\description{
Writes an \R object to a tab-separated values (TSV) file.
}
\section{Methods (by class)}{
\itemize{
\item \code{data.table}: Writes a \link{data.table} using \code{\link[data.table:fwrite]{data.table::fwrite()}}.

\item \code{data.frame}: Writes a \link{data.frame} using \code{\link[data.table:fwrite]{data.table::fwrite()}}.

\item \code{matrix}: Writes a \link{matrix} using \code{\link[data.table:fwrite]{data.table::fwrite()}}.
}}

\examples{
library(dtutils)

# write a data.table
mtcars_dt <- data.table::as.data.table(mtcars, keep.rownames = TRUE)
write_tsv(mtcars_dt, "mtcars.tsv")

# write a data.frame
write_tsv(mtcars, "mtcars.tsv")
write_tsv(mtcars, "mtcars.tsv", row_names = "ROWNAMES")

# write a matrix
x <- matrix(runif(100), ncol = 5)
write_tsv(x, "matrix.tsv")
colnames(x) <- paste0("col_", letters[1:5])
write_tsv(x, "matrix_with_column_names.tsv")
rownames(x) <- paste0("row_", letters[1:20])
write_tsv(x, "matrix_with_column_and_row_names.tsv")
}
